<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="history">
	
	<resultMap type="Parsing" id="parsing_basic">
		<result column="pn" property="pn"/>
		<result column="user_pn" property="userPn"/>
		<result column="url" property="url"/>
		<result column="title" property="title"/>
		<result column="count" property="count"/>
		<result column="domain" property="domain"/>
		<result column="favicon" property="favicon"/>
	</resultMap>
	
	<resultMap type="Image" id="image_basic">
		<result column="visit_pn" property="visitPn"/>
		<result column="url" property="url"/>
		<result column="width" property="width"/>
		<result column="height" property="height"/>
		<result column="color" property="color"/>
	</resultMap>
	
	<resultMap type="Color" id="color_basic">
		<result column="pn" property="pn"/>
		<result column="ko_name" property="koName"/>
		<result column="en_name" property="enName"/>
		<result column="rgb" property="rgb"/>
	</resultMap>	
	
	<select id="selectVisitCount" parameterType="VisitFilter" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			(
				SELECT
					pv.`url_pn`, pv.`user_pn`, pu.`url`, COUNT(pv.`url_pn`) AS `count`
				FROM
					`parsing_visit` AS pv
					LEFT OUTER JOIN `parsing_url`AS pu
					ON pv.`url_pn` = pu.`pn`
				WHERE
					pv.`user_pn` = #{userPn}
				GROUP BY
					pv.`url_pn`
			) pc
	</select>
	
	<select id="selectVisits" parameterType="VisitFilter" resultMap="parsing_basic">
		SELECT
			pc.`url_pn`, pc.`user_pn`, pc.`url`, pc.`count`, pc.`title`, pc.`domain`, pc.`favicon`
		FROM
			(
				SELECT
					pv.`url_pn`, pv.`user_pn`, pu.`url`, pu.`domain`, pu.`favicon`, COUNT(pv.`url_pn`) AS `count`, pd.`title`
				FROM
					`parsing_visit` AS pv
					LEFT OUTER JOIN `parsing_url`AS pu
					ON pv.`url_pn` = pu.`pn`
					LEFT OUTER JOIN `parsing_data` AS pd
					ON pd.`visit_pn` = pv.`pn`
				WHERE
					pv.`user_pn` = #{userPn}
				GROUP BY
					pv.`url_pn`
			) pc
		ORDER BY
			pc.`count` DESC
	</select>
	
	<select id="selectImageCount" parameterType="ImageSearchFilter" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			`parsing_image` AS `pi`
			LEFT OUTER JOIN `parsing_visit` AS `pv`
			ON pi.`visit_pn` = pv.`pn`
		WHERE
			pv.`user_pn` = #{userPn}
		<if test="width != null">
		AND
		<![CDATA[
			pi.`width` >= #{width}
		]]>
		</if>
		<if test="height != null">
		AND
		<![CDATA[
			pi.`height` >= #{height}
		]]>
		</if>
		AND
			(
				DATE_FORMAT(pv.`register_date`,'%d-%m-%Y') BETWEEN #{from} AND #{to}
			)
		<if test="color != null and color != 0">
		AND
			pi.`color` = #{color}
		</if>
	</select>
	
	<select id="selectImages" parameterType="ImageSearchFilter" resultMap="image_basic">
		SELECT
			pu.`url` AS link, pi.`url`, pi.`width`, pi.`height`, pi.`color`
		FROM
			`parsing_image` AS `pi`
			LEFT OUTER JOIN `parsing_visit` AS `pv`
			ON pi.`visit_pn` = pv.`pn`
			LEFT OUTER JOIN `parsing_url` AS `pu`
			ON pu.`pn` = pv.`url_pn`
		WHERE
			pv.`user_pn` = #{userPn}
		<if test="width != null">
		AND
		<![CDATA[
			pi.`width` >= #{width}
		]]>
		</if>
		<if test="height != null">
		AND
		<![CDATA[
			pi.`height` >= #{height}
		]]>
		</if>		
		AND
			(
				DATE_FORMAT(pv.`register_date`,'%d-%m-%Y') BETWEEN #{from} AND #{to}
			)
		<if test="color != null and color != 0">
		AND
			pi.`color` = #{color}
		</if>
		ORDER BY
			pv.`register_date` DESC
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}
	</select>
		
	<select id="selectColors" resultMap="color_basic">
		SELECT
			pn, ko_name, en_name, rgb
		FROM
			parsing_color
	</select>	
		
</mapper>
